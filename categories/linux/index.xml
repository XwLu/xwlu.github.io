<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on My New Hugo Site</title>
    <link>https://xwlu.github.io/categories/linux/</link>
    <description>Recent content in Linux on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://xwlu.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tmux Configuration</title>
      <link>https://xwlu.github.io/post/tools/tmux_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://xwlu.github.io/post/tools/tmux_config/</guid>
      <description>&lt;h2 id=&#34;tmux工作方式&#34;&gt;tmux工作方式&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h3 id=&#34;tmux最上级的组织是session操作如下&#34;&gt;tmux最上级的组织是session,操作如下:&lt;/h3&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tmux new-session -d -s S -n W1 #构建一个叫S的会话且默认窗口名为W1,S:0或者S:W1都可以访问到该窗口,-d代表在后台运行,不加就会直接在终端显示&#xA;tmux detach #退出当前会话,依然在后台运行&#xA;tmux ls #列出所有会话i&#xA;tmux kill-session -t S #杀掉一个叫S的会话&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h3 id=&#34;第二层组织是windows构建方式如下&#34;&gt;第二层组织是windows,构建方式如下:&lt;/h3&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tmux new-window -t S:1 -n W2 #在S会话下,新建一个窗口S:1,重命名为W2,访问的时候S:1和S:W2都可以访问到该窗口&#xA;tmux select-window -t S:0 #选中第一个窗口&#xA;tmux select-window -t S:W1 #效果同上&#xA;tmux kill-window -t S:W2 #杀掉S会话的W2窗口&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h3 id=&#34;第三层组织是pane操作方式如下&#34;&gt;第三层组织是pane,操作方式如下:&lt;/h3&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tmux selectp -t 0 #选中当前窗口下的第0个pane&#xA;tmux splitw -h -p 50 #从当前pane(编号0)向右按照50:50的比例分裂出新的pane(编号1)&#xA;tmux selectp -t 0 #选中当前窗口下的第0个pane&#xA;tmux splitw -v -p 50 #从当前plane向下按照50:50的比例分裂出新的pane(编号1,原先的编号1--&amp;gt;2)&#xA;tmux selectp -t 0 #选中第0个pane&#xA;tmux send-keys -t &amp;#34;roscore&amp;#34; C-m #在当前选中的pane运行roscore命令&#xA;tmux kill-pane -t 2 #杀掉第2个pane&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;基本命令如果个性化配置后crtlb要根据自己的配置修改&#34;&gt;基本命令(如果个性化配置后,crtl+b要根据自己的配置修改)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ctrl+b &amp;quot; — 水平分割标签&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+b % — 竖直分割标签&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+b 方向键 — 选择标签&lt;/li&gt;&#xA;&lt;li&gt;按住 Ctrl+b不放，并且按方向键 — 调整标签大小&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+b c — 创建 (c)reate 一个新窗口&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+b n — 转到下一个 (n)ext 窗口&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+b p — 转到之前的 (p)revious 窗口&lt;/li&gt;&#xA;&lt;li&gt;ctrl+b &amp;amp; — 杀掉当前窗口&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tmux-自启动修改bashrc&#34;&gt;tmux 自启动(修改.bashrc)&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if [ $TERM != &amp;#34;screen-256color&amp;#34; ] &amp;amp;&amp;amp; [  $TERM != &amp;#34;screen&amp;#34; ]; then&#xA;    tmux attach || tmux new; exit&#xA;fi &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;改造tmux&#34;&gt;改造tmux&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd ~&#xA;vim .tmux.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1更改前缀ctrlb---ctrla&#34;&gt;1.更改前缀(ctrl+b -&amp;gt; ctrl+a)&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;unbind C-b&#xA;set -g prefix C-a&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2alt方向键选择标签&#34;&gt;2.Alt+方向键选择标签&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bind -n M-Left select-pane -L&#xA;bind -n M-Right select-pane -R&#xA;bind -n M-Up select-pane -U&#xA;bind -n M-Down select-pane -D&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3活动监听&#34;&gt;3.活动监听&lt;/h3&gt;&#xA;&lt;h4 id=&#34;如果你开了多个窗口可能想当别的窗口发生什么的时候你能收到通知粘贴这段命令&#34;&gt;如果你开了多个窗口，可能想当别的窗口发生什么的时候你能收到通知。粘贴这段命令：&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setw -g monitor-activity on&#xA;set -g visual-activity on&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4用指定的颜色高亮显示当前窗口&#34;&gt;4.用指定的颜色高亮显示当前窗口&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;set-window-option -g window-status-current-bg yellow&#xA;setw -g monitor-activity on&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;一键启动脚本demo&#34;&gt;一键启动脚本demo:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h3 id=&#34;文件名startsh&#34;&gt;文件名&lt;strong&gt;start.sh&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 创建会话和窗口&#xA;tmux new-session -d -s pickman -n control&#xA;tmux select-window -t pickman:control&#xA;&#xA;# 先构建pane的布局&#xA;tmux selectp -t 0&#xA;tmux splitw -h -p 50&#xA;tmux selectp -t 0&#xA;tmux splitw -v -p 50&#xA;tmux selectp -t 2&#xA;tmux splitw -v -p 50&#xA;tmux selectp -t 2&#xA;tmux splitw -h -p 50&#xA;&#xA;&#xA;# 再ctrl+x q查看一下pane的编号,往对应编号的pane里写指令&#xA;tmux selectp -t 0&#xA;tmux send-keys &amp;#34;roscore&amp;#34; C-m&#xA;tmux selectp -t 1&#xA;tmux send-keys &amp;#34;sleep 1;rosbag play /home/luyifan/BAG/BUG.bag --clock -s 20 -r 1.0&amp;#34; C-m&#xA;tmux selectp -t 2&#xA;tmux send-keys &amp;#34;sleep 2;rosrun rviz rviz -d /home/luyifan/Project/PathPlanning/pickman_ws/src/rviz/pickman.rviz&amp;#34; C-m&#xA;tmux selectp -t 3&#xA;tmux send-keys &amp;#34;sleep 3;rosrun create_map create_map&amp;#34; C-m&#xA;tmux selectp -t 4&#xA;tmux send-keys &amp;#34;sleep 3;rosrun dstar dstar&amp;#34; C-m&#xA;&#xA;# 控制rosbag的播放&#xA;tmux selectp -t 1&#xA;&#xA;tmux attach -t pickman&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h3 id=&#34;tips用脚本来启动tmux和各类指令的时候需要先-d再attach出来否则指令不运行&#34;&gt;Tips:用脚本来启动tmux和各类指令的时候,需要先-d再attach出来,否则指令不运行&lt;/h3&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;一键清除脚本demo&#34;&gt;一键清除脚本demo&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h3 id=&#34;文件名killsh&#34;&gt;文件名&lt;strong&gt;kill.sh&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tmux kill-session -t tiggo&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
